"use strict";(self.webpackChunkvinci_docs=self.webpackChunkvinci_docs||[]).push([[413],{1383:(e,n,t)=>{t.d(n,{nD:()=>d,_I:()=>u,Zp:()=>i,AC:()=>o,Or:()=>p,R2:()=>x,gj:()=>h,oz:()=>l,tU:()=>c,Y6:()=>m,N5:()=>f});var a=t(6540);const r={card:"card_t5fD",cardLink:"cardLink_IU3k"};var s=t(4848);function i(e){let{title:n,icon:t,href:a,children:i}=e;const o=(0,s.jsxs)("div",{className:r.card,children:[t&&(0,s.jsx)("i",{className:`fa fa-${t}`}),(0,s.jsx)("h3",{children:n}),(0,s.jsx)("div",{children:i})]});return a?(0,s.jsx)("a",{href:a,className:r.cardLink,children:o}):o}function o(e){let{cols:n=2,children:t}=e;return(0,s.jsx)("div",{className:"card-group",style:{display:"grid",gridTemplateColumns:`repeat(${n}, 1fr)`,gap:"1rem",marginBottom:"1rem"},children:t})}function c(e){let{children:n}=e;const[t,r]=(0,a.useState)(0),i=a.Children.toArray(n).filter((e=>a.isValidElement(e)&&e.type===l));return(0,s.jsxs)("div",{className:"tabs",style:{marginBottom:"1rem"},children:[(0,s.jsx)("div",{className:"tab-list",style:{display:"flex",borderBottom:"1px solid var(--ifm-color-emphasis-300)",marginBottom:"1rem"},children:i.map(((e,n)=>(0,s.jsx)("button",{onClick:()=>r(n),style:{padding:"0.75rem 1rem",border:"none",background:t===n?"var(--ifm-color-primary)":"transparent",color:t===n?"white":"var(--ifm-color-emphasis-800)",cursor:"pointer",borderRadius:"6px 6px 0 0",fontWeight:t===n?600:400},children:a.isValidElement(e)?e.props.title:""},n)))}),(0,s.jsx)("div",{className:"tab-content",children:i[t]})]})}function l(e){let{title:n,children:t}=e;return(0,s.jsx)("div",{className:"tab",children:t})}function d(e){let{title:n,children:t}=e;const[r,i]=(0,a.useState)(!1);return(0,s.jsxs)("details",{className:"accordion",open:r,onToggle:e=>i(e.target.open),children:[(0,s.jsxs)("summary",{className:"accordion-title",style:{cursor:"pointer",padding:"1rem",backgroundColor:"var(--ifm-color-emphasis-100)",border:"1px solid var(--ifm-color-emphasis-300)",borderRadius:"6px",marginBottom:r?"0":"0.5rem",fontWeight:600,display:"flex",alignItems:"center",justifyContent:"space-between"},children:[n,(0,s.jsx)("span",{style:{transform:r?"rotate(90deg)":"rotate(0deg)",transition:"transform 0.2s"},children:"\u25b6"})]}),(0,s.jsx)("div",{className:"accordion-content",style:{padding:"1rem",border:"1px solid var(--ifm-color-emphasis-300)",borderTop:"none",borderRadius:"0 0 6px 6px",marginBottom:"0.5rem"},children:t})]})}function u(e){let{children:n}=e;return(0,s.jsx)("div",{className:"accordion-group",style:{marginBottom:"1rem"},children:n})}function p(e){let{children:n}=e;return(0,s.jsx)("div",{className:"code-blocks",style:{marginBottom:"1rem"},children:n})}function h(e){let{children:n}=e;return(0,s.jsx)("div",{className:"steps",style:{counterReset:"step-counter",marginBottom:"1rem"},children:n})}const g=e=>{let{type:n,title:t,icon:a,children:r}=e;const i={tip:{bg:"#e8f5e8",border:"#4caf50",icon:"\ud83d\udca1"},warning:{bg:"#fff3cd",border:"#ff9800",icon:"\u26a0\ufe0f"},info:{bg:"#e3f2fd",border:"#2196f3",icon:"\u2139\ufe0f"},note:{bg:"#f5f5f5",border:"#9e9e9e",icon:"\ud83d\udcdd"},error:{bg:"#ffebee",border:"#f44336",icon:"\u274c"},check:{bg:"#e8f5e8",border:"#4caf50",icon:"\u2705"}},o=i[n]||i.info;return(0,s.jsxs)("div",{style:{padding:"1rem",backgroundColor:o.bg,border:`1px solid ${o.border}`,borderLeftWidth:"4px",borderRadius:"6px",marginBottom:"1rem"},children:[t&&(0,s.jsxs)("div",{style:{fontWeight:600,marginBottom:"0.5rem",display:"flex",alignItems:"center",gap:"0.5rem"},children:[(0,s.jsx)("span",{children:a||o.icon}),t]}),(0,s.jsx)("div",{children:r})]})};function m(e){let{title:n,icon:t,children:a}=e;return(0,s.jsx)(g,{type:"tip",title:n,icon:t,children:a})}function f(e){let{title:n,icon:t,children:a}=e;return(0,s.jsx)(g,{type:"warning",title:n,icon:t,children:a})}function x(e){let{title:n,icon:t,children:a}=e;return(0,s.jsx)(g,{type:"info",title:n,icon:t,children:a})}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(6540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}},9294:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"api-reference/billing","title":"Billing and usage","description":"Track your account balance, usage statistics, and manage your billing preferences.","source":"@site/docs/api-reference/billing.mdx","sourceDirName":"api-reference","slug":"/api-reference/billing","permalink":"/api-reference/billing","draft":false,"unlisted":false,"editUrl":"https://github.com/tryvinci/docs/edit/main/docs/api-reference/billing.mdx","tags":[],"version":"current","frontMatter":{"title":"Billing and usage","subtitle":"Monitor your account balance and API usage."},"sidebar":"tutorialSidebar","previous":{"title":"API keys","permalink":"/api-reference/api-keys"}}');var r=t(4848),s=t(8453),i=t(1383);const o={title:"Billing and usage",subtitle:"Monitor your account balance and API usage."},c="Billing and usage",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Pricing",id:"pricing",level:2},{value:"Check balance",id:"check-balance",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Response",id:"response",level:3},{value:"Code example",id:"code-example",level:3},{value:"Get usage statistics",id:"get-usage-statistics",level:2},{value:"Endpoint",id:"endpoint-1",level:3},{value:"Authentication",id:"authentication-1",level:3},{value:"Query parameters",id:"query-parameters",level:3},{value:"Response",id:"response-1",level:3},{value:"Code example",id:"code-example-1",level:3},{value:"Monitor balance before requests",id:"monitor-balance-before-requests",level:2},{value:"Adding balance",id:"adding-balance",level:2},{value:"Cost optimization tips",id:"cost-optimization-tips",level:2},{value:"Error handling",id:"error-handling",level:2},{value:"Insufficient balance",id:"insufficient-balance",level:3},{value:"Best practices",id:"best-practices",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"billing-and-usage",children:"Billing and usage"})}),"\n",(0,r.jsx)(n.p,{children:"Track your account balance, usage statistics, and manage your billing preferences."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Vinci uses a simple usage-based pricing model. Monitor your spending and usage patterns to optimize your costs and ensure uninterrupted service."}),"\n",(0,r.jsxs)(i.AC,{cols:2,children:[(0,r.jsx)(i.Zp,{title:"Balance checking",icon:"wallet",children:(0,r.jsx)(n.p,{children:"Check your current account balance in real-time."})}),(0,r.jsx)(i.Zp,{title:"Usage statistics",icon:"chart-line",children:(0,r.jsx)(n.p,{children:"Monitor API usage and costs over time."})})]}),"\n",(0,r.jsx)(n.h2,{id:"pricing",children:"Pricing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Video generation"}),": $0.05 per second of generated video"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API management"}),": Free with your account"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Usage monitoring"}),": Free with your account"]}),"\n"]}),"\n",(0,r.jsx)(i.R2,{children:(0,r.jsx)(n.p,{children:"All prices are in USD. Usage is calculated to the nearest cent based on actual processing time."})}),"\n",(0,r.jsx)(n.h2,{id:"check-balance",children:"Check balance"}),"\n",(0,r.jsx)(n.p,{children:"Get your current account balance and total spending."}),"\n",(0,r.jsx)(n.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"GET /api/v1/billing/balance\n"})}),"\n",(0,r.jsx)(n.h3,{id:"authentication",children:"Authentication"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"Authorization: Bearer sk-your-api-key-here\n"})}),"\n",(0,r.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "balance_usd": 25.5000,\n  "total_spent_usd": 134.7500\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"code-example",children:"Code example"}),"\n",(0,r.jsxs)(i.Or,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:'title="check_balance.py"',children:'import requests\n\nurl = "https://tryvinci.com/api/v1/billing/balance"\nheaders = {"Authorization": "Bearer sk-your-api-key-here"}\n\nresponse = requests.get(url, headers=headers)\nbalance = response.json()\n\nprint(f"Current balance: ${balance[\'balance_usd\']:.2f}")\nprint(f"Total spent: ${balance[\'total_spent_usd\']:.2f}")\n\n# Check if balance is low\nif balance[\'balance_usd\'] < 5.0:\n    print("\u26a0\ufe0f  Low balance! Consider adding more credits.")\n'})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="check_balance.js"',children:"const response = await fetch('https://tryvinci.com/api/v1/billing/balance', {\n  headers: {\n    'Authorization': 'Bearer sk-your-api-key-here',\n  },\n});\n\nconst balance = await response.json();\nconsole.log(`Current balance: $${balance.balance_usd.toFixed(2)}`);\nconsole.log(`Total spent: $${balance.total_spent_usd.toFixed(2)}`);\n\n// Check if balance is low\nif (balance.balance_usd < 5.0) {\n  console.log('\u26a0\ufe0f  Low balance! Consider adding more credits.');\n}\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"get-usage-statistics",children:"Get usage statistics"}),"\n",(0,r.jsx)(n.p,{children:"Monitor your API usage and costs over a specified time period."}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-1",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"GET /api/v1/billing/usage?days={days}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"authentication-1",children:"Authentication"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"Authorization: Bearer sk-your-api-key-here\n"})}),"\n",(0,r.jsx)(n.h3,{id:"query-parameters",children:"Query parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"days"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"Number of days to look back (1-90)"}),(0,r.jsx)(n.td,{children:"30"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"response-1",children:"Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "period_days": 30,\n  "total_requests": 156,\n  "total_seconds": 420.5,\n  "total_cost_usd": 21.0250,\n  "current_balance_usd": 25.5000,\n  "total_spent_usd": 134.7500\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"code-example-1",children:"Code example"}),"\n",(0,r.jsxs)(i.Or,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:'title="usage_stats.py"',children:'import requests\n\n# Get usage for the last 7 days\nurl = "https://tryvinci.com/api/v1/billing/usage?days=7"\nheaders = {"Authorization": "Bearer sk-your-api-key-here"}\n\nresponse = requests.get(url, headers=headers)\nusage = response.json()\n\nprint(f"Usage for last {usage[\'period_days\']} days:")\nprint(f"- Total requests: {usage[\'total_requests\']}")\nprint(f"- Total video seconds: {usage[\'total_seconds\']}")\nprint(f"- Total cost: ${usage[\'total_cost_usd\']:.2f}")\nprint(f"- Current balance: ${usage[\'current_balance_usd\']:.2f}")\n\n# Calculate average cost per request\nif usage[\'total_requests\'] > 0:\n    avg_cost = usage[\'total_cost_usd\'] / usage[\'total_requests\']\n    print(f"- Average cost per request: ${avg_cost:.3f}")\n'})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="usage_stats.js"',children:"// Get usage for the last 7 days\nconst response = await fetch('https://tryvinci.com/api/v1/billing/usage?days=7', {\n  headers: {\n    'Authorization': 'Bearer sk-your-api-key-here',\n  },\n});\n\nconst usage = await response.json();\nconsole.log(`Usage for last ${usage.period_days} days:`);\nconsole.log(`- Total requests: ${usage.total_requests}`);\nconsole.log(`- Total video seconds: ${usage.total_seconds}`);\nconsole.log(`- Total cost: $${usage.total_cost_usd.toFixed(2)}`);\nconsole.log(`- Current balance: $${usage.current_balance_usd.toFixed(2)}`);\n\n// Calculate average cost per request\nif (usage.total_requests > 0) {\n  const avgCost = usage.total_cost_usd / usage.total_requests;\n  console.log(`- Average cost per request: $${avgCost.toFixed(3)}`);\n}\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"monitor-balance-before-requests",children:"Monitor balance before requests"}),"\n",(0,r.jsx)(n.p,{children:"Always check your balance before making expensive API calls to avoid failed requests."}),"\n",(0,r.jsxs)(i.Or,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:'title="balance_check.py"',children:'import requests\n\ndef check_balance_for_video(duration_seconds, api_key):\n    """Check if balance is sufficient for video generation"""\n    \n    # Check current balance\n    balance_url = "http://34.67.47.2:8000/api/v1/billing/balance"\n    headers = {"Authorization": f"Bearer {api_key}"}\n    \n    response = requests.get(balance_url, headers=headers)\n    balance = response.json()\n    \n    # Calculate estimated cost\n    estimated_cost = duration_seconds * 0.05\n    current_balance = balance[\'balance_usd\']\n    \n    print(f"Current balance: ${current_balance:.2f}")\n    print(f"Estimated cost: ${estimated_cost:.2f}")\n    \n    if current_balance < estimated_cost:\n        print("\u274c Insufficient balance for this request")\n        return False\n    \n    print("\u2705 Sufficient balance available")\n    return True\n\n# Example usage\napi_key = "sk-your-api-key-here"\nvideo_duration = 8  # seconds\n\nif check_balance_for_video(video_duration, api_key):\n    print("Proceeding with video generation...")\n    # Make video generation request\nelse:\n    print("Please add more credits to your account")\n'})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="balance_check.js"',children:"async function checkBalanceForVideo(durationSeconds, apiKey) {\n  // Check current balance\n  const balanceResponse = await fetch('http://34.67.47.2:8000/api/v1/billing/balance', {\n    headers: { 'Authorization': `Bearer ${apiKey}` },\n  });\n  \n  const balance = await balanceResponse.json();\n  \n  // Calculate estimated cost\n  const estimatedCost = durationSeconds * 0.05;\n  const currentBalance = balance.balance_usd;\n  \n  console.log(`Current balance: $${currentBalance.toFixed(2)}`);\n  console.log(`Estimated cost: $${estimatedCost.toFixed(2)}`);\n  \n  if (currentBalance < estimatedCost) {\n    console.log('\u274c Insufficient balance for this request');\n    return false;\n  }\n  \n  console.log('\u2705 Sufficient balance available');\n  return true;\n}\n\n// Example usage\nconst apiKey = 'sk-your-api-key-here';\nconst videoDuration = 8; // seconds\n\nif (await checkBalanceForVideo(videoDuration, apiKey)) {\n  console.log('Proceeding with video generation...');\n  // Make video generation request\n} else {\n  console.log('Please add more credits to your account');\n}\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"adding-balance",children:"Adding balance"}),"\n",(0,r.jsxs)(n.p,{children:["To add credits to your account, visit your dashboard at ",(0,r.jsx)(n.a,{href:"https://tryvinci.com",children:"https://tryvinci.com"})," and navigate to the billing section. You can add credits using:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Credit/debit cards"}),"\n",(0,r.jsx)(n.li,{children:"PayPal"}),"\n",(0,r.jsx)(n.li,{children:"Bank transfers (for larger amounts)"}),"\n"]}),"\n",(0,r.jsx)(i.Y6,{children:(0,r.jsx)(n.p,{children:"Set up automatic top-ups to ensure uninterrupted service. You can configure your account to automatically add credits when your balance falls below a specified threshold."})}),"\n",(0,r.jsx)(n.h2,{id:"cost-optimization-tips",children:"Cost optimization tips"}),"\n",(0,r.jsxs)(i._I,{children:[(0,r.jsx)(i.nD,{title:"Video duration",children:(0,r.jsx)(n.p,{children:"Use shorter durations for testing and development. A 3-second test video costs $0.15 instead of $0.50 for a 10-second video."})}),(0,r.jsx)(i.nD,{title:"Batch processing",children:(0,r.jsx)(n.p,{children:"Group multiple requests together to reduce overhead and optimize your usage patterns."})}),(0,r.jsx)(i.nD,{title:"Monitor usage regularly",children:(0,r.jsx)(n.p,{children:"Check your usage statistics weekly to identify patterns and optimize your costs."})}),(0,r.jsx)(i.nD,{title:"Set balance alerts",children:(0,r.jsx)(n.p,{children:"Configure notifications when your balance drops below a certain threshold to avoid service interruptions."})})]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error handling"}),"\n",(0,r.jsx)(n.h3,{id:"insufficient-balance",children:"Insufficient balance"}),"\n",(0,r.jsx)(n.p,{children:"When your balance is too low for a request, the API returns a 402 status code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "detail": "Insufficient balance. Current balance: $1.25, required: $2.50"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Handle this error gracefully in your applications:"}),"\n",(0,r.jsxs)(i.Or,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:'title="error_handling.py"',children:'import requests\n\ndef make_video_request(prompt, duration, api_key):\n    url = "http://34.67.47.2:8000/api/v1/generate/text-to-video"\n    headers = {\n        "Authorization": f"Bearer {api_key}",\n        "Content-Type": "application/json"\n    }\n    data = {\n        "prompt": prompt,\n        "duration_seconds": duration\n    }\n    \n    try:\n        response = requests.post(url, headers=headers, json=data)\n        \n        if response.status_code == 402:\n            error_data = response.json()\n            print(f"Insufficient balance: {error_data[\'detail\']}")\n            return None\n        \n        response.raise_for_status()\n        return response.json()\n        \n    except requests.exceptions.RequestException as e:\n        print(f"Request failed: {e}")\n        return None\n'})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="error_handling.js"',children:"async function makeVideoRequest(prompt, duration, apiKey) {\n  const url = 'http://34.67.47.2:8000/api/v1/generate/text-to-video';\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        prompt: prompt,\n        duration_seconds: duration\n      }),\n    });\n    \n    if (response.status === 402) {\n      const errorData = await response.json();\n      console.log(`Insufficient balance: ${errorData.detail}`);\n      return null;\n    }\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    return await response.json();\n    \n  } catch (error) {\n    console.log(`Request failed: ${error.message}`);\n    return null;\n  }\n}\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,r.jsxs)(i.AC,{cols:2,children:[(0,r.jsx)(i.Zp,{title:"Regular monitoring",icon:"chart-line",children:(0,r.jsx)(n.p,{children:"Check your balance and usage statistics regularly to avoid service interruptions."})}),(0,r.jsx)(i.Zp,{title:"Cost estimation",icon:"calculator",children:(0,r.jsx)(n.p,{children:"Always estimate costs before making requests, especially for longer videos."})}),(0,r.jsx)(i.Zp,{title:"Error handling",icon:"shield",children:(0,r.jsx)(n.p,{children:"Implement proper error handling for insufficient balance scenarios."})}),(0,r.jsx)(i.Zp,{title:"Budget management",icon:"piggy-bank",children:(0,r.jsx)(n.p,{children:"Set up automatic top-ups and balance alerts to maintain service continuity."})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);