"use strict";(self.webpackChunkvinci_docs=self.webpackChunkvinci_docs||[]).push([[91],{9786:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"api-reference/voice","title":"Voice Conversion","description":"Transform voice characteristics while preserving speech content","source":"@site/docs/api-reference/voice.mdx","sourceDirName":"api-reference","slug":"/api-reference/voice","permalink":"/api-reference/voice","draft":false,"unlisted":false,"editUrl":"https://github.com/tryvinci/docs/edit/main/docs/api-reference/voice.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Voice Conversion","description":"Transform voice characteristics while preserving speech content","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Text to Speech","permalink":"/api-reference/tts"},"next":{"title":"Lip Sync","permalink":"/api-reference/lipsync"}}');var s=r(4848),t=r(8453),c=r(5537),d=r(9329);r(8069),r(2362);const o={title:"Voice Conversion",description:"Transform voice characteristics while preserving speech content",sidebar_position:5},a="Voice Conversion",l={},h=[{value:"Overview",id:"overview",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Headers",id:"headers",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Response",id:"response",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"Voice Features",id:"voice-features",level:2},{value:"Best Practices",id:"best-practices",level:2}];function p(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components},{Details:r}=i;return r||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"voice-conversion",children:"Voice Conversion"})}),"\n",(0,s.jsx)(i.p,{children:"Transform any voice to match a target speaker while maintaining natural intonation and emotion."}),"\n",(0,s.jsxs)("div",{className:"card",children:[(0,s.jsx)("div",{className:"card__header",children:(0,s.jsx)("h3",{children:"Try it out"})}),(0,s.jsx)("div",{className:"card__body",children:(0,s.jsx)(i.p,{children:"Test the Voice Conversion API directly in your browser with our interactive playground."})})]}),"\n",(0,s.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(i.p,{children:"The Voice Conversion API allows you to modify the voice characteristics of audio content while preserving the original speech content, timing, and emotion."}),"\n",(0,s.jsx)(i.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsx)(i.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-http",children:"POST https://api.tryvinci.com/vincivoice\n"})}),"\n",(0,s.jsx)(i.h3,{id:"headers",children:"Headers"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"X-User-ID"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"Required. Your user ID"})]})})]}),"\n",(0,s.jsx)(i.h3,{id:"request-body",children:"Request Body"}),"\n",(0,s.jsx)(i.p,{children:"Multipart form data with:"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Parameter"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"audio"}),(0,s.jsx)(i.td,{children:"File"}),(0,s.jsx)(i.td,{children:"Source audio file to convert"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"target_voice"}),(0,s.jsx)(i.td,{children:"string"}),(0,s.jsx)(i.td,{children:"Target voice identifier"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"response",children:"Response"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:'{\n  url: string,        // URL to the converted audio file\n  media_type: string, // "audio/wav"\n  user_id: string    // The user ID used for the request\n}\n'})}),"\n",(0,s.jsx)(i.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,s.jsxs)(c.A,{children:[(0,s.jsx)(d.A,{value:"python",label:"Python",default:!0,children:(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:'import requests\n\nurl = "https://api.tryvinci.com/vincivoice"\nheaders = {"X-User-ID": "your-user-id"}\nfiles = {"audio": open("input.wav", "rb")}\ndata = {"target_voice": "voice_1"}\n\nresponse = requests.post(url, headers=headers, files=files, data=data)\nresult = response.json()\nprint(f"Converted Audio URL: {result[\'url\']}")\n'})})}),(0,s.jsx)(d.A,{value:"javascript",label:"JavaScript",children:(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"const formData = new FormData();\nformData.append('audio', audioFile);\nformData.append('target_voice', 'voice_1');\n\nconst response = await fetch('https://api.tryvinci.com/vincivoice', {\n  method: 'POST',\n  headers: {\n    'X-User-ID': 'your-user-id',\n  },\n  body: formData,\n});\n\nconst result = await response.json();\nconsole.log(`Converted Audio URL: ${result.url}`);\n"})})})]}),"\n",(0,s.jsx)(i.h2,{id:"voice-features",children:"Voice Features"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Target Voices"}),(0,s.jsx)("div",{children:(0,s.jsx)(i.p,{children:"Choose from our pre-trained voice library or use custom voice cloning."})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Audio Requirements"}),(0,s.jsx)("div",{children:(0,s.jsx)(i.p,{children:"Supports WAV, MP3, and M4A formats. Recommended: 16-bit PCM WAV."})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Quality Control"}),(0,s.jsx)("div",{children:(0,s.jsx)(i.p,{children:"Automatic audio enhancement and noise reduction included."})})]}),"\n",(0,s.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)("div",{className:"row",children:[(0,s.jsx)("div",{className:"col col--6",children:(0,s.jsxs)("div",{className:"card",children:[(0,s.jsx)("div",{className:"card__header",children:(0,s.jsx)("h3",{children:"Audio Quality"})}),(0,s.jsx)("div",{className:"card__body",children:(0,s.jsx)(i.p,{children:"Use high-quality source audio for best results."})})]})}),(0,s.jsx)("div",{className:"col col--6",children:(0,s.jsxs)("div",{className:"card",children:[(0,s.jsx)("div",{className:"card__header",children:(0,s.jsx)("h3",{children:"Duration Limits"})}),(0,s.jsx)("div",{className:"card__body",children:(0,s.jsx)(i.p,{children:"Optimal performance for 5-30 second segments."})})]})})]}),"\n",(0,s.jsx)(i.admonition,{title:"Optimization",type:"tip",children:(0,s.jsx)(i.p,{children:"For longer content, consider splitting into smaller segments and using our batch processing endpoint."})})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);