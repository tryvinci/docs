"use strict";(self.webpackChunkvinci_docs=self.webpackChunkvinci_docs||[]).push([[420],{4335:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"api-reference/lipsync","title":"Lip Sync","description":"Create perfectly synchronized talking head videos","source":"@site/docs/api-reference/lipsync.mdx","sourceDirName":"api-reference","slug":"/api-reference/lipsync","permalink":"/api-reference/lipsync","draft":false,"unlisted":false,"editUrl":"https://github.com/tryvinci/docs/edit/main/docs/api-reference/lipsync.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Lip Sync","description":"Create perfectly synchronized talking head videos","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Voice Conversion","permalink":"/api-reference/voice"},"next":{"title":"Live Portrait","permalink":"/api-reference/live-portrait"}}');var r=n(4848),d=n(8453),l=n(5537),t=n(9329);n(8069),n(2362);const c={title:"Lip Sync",description:"Create perfectly synchronized talking head videos",sidebar_position:6},a="Lip Sync",o={},h=[{value:"Overview",id:"overview",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Headers",id:"headers",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Response",id:"response",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"Input Requirements",id:"input-requirements",level:2},{value:"Best Practices",id:"best-practices",level:2}];function p(e){const i={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components},{Details:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"lip-sync",children:"Lip Sync"})}),"\n",(0,r.jsx)(i.p,{children:"Synchronize video avatar lips with audio input for natural-looking talking head videos."}),"\n",(0,r.jsxs)("div",{className:"card",children:[(0,r.jsx)("div",{className:"card__header",children:(0,r.jsx)("h3",{children:"Try it out"})}),(0,r.jsx)("div",{className:"card__body",children:(0,r.jsx)(i.p,{children:"Test the Lip Sync API directly in your browser with our interactive playground."})})]}),"\n",(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.p,{children:"The Lip Sync API uses advanced AI to precisely match lip movements with speech audio, creating natural and convincing talking head videos."}),"\n",(0,r.jsx)(i.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsx)(i.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-http",children:"POST https://api.tryvinci.com/vincils\n"})}),"\n",(0,r.jsx)(i.h3,{id:"headers",children:"Headers"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Name"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"X-User-ID"}),(0,r.jsx)(i.td,{children:"string"}),(0,r.jsx)(i.td,{children:"Required. Your user ID"})]})})]}),"\n",(0,r.jsx)(i.h3,{id:"request-body",children:"Request Body"}),"\n",(0,r.jsx)(i.p,{children:"Multipart form data with:"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Parameter"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"audio"}),(0,r.jsx)(i.td,{children:"File"}),(0,r.jsx)(i.td,{children:"Audio file containing speech"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"video"}),(0,r.jsx)(i.td,{children:"File"}),(0,r.jsx)(i.td,{children:"Video file to synchronize"})]})]})]}),"\n",(0,r.jsx)(i.h3,{id:"response",children:"Response"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-typescript",children:'{\n  url: string,        // URL to the synchronized video\n  media_type: string, // "video/mp4"\n  user_id: string    // The user ID used for the request\n}\n'})}),"\n",(0,r.jsx)(i.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(t.A,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:'import requests\n\nurl = "https://api.tryvinci.com/vincils"\nheaders = {"X-User-ID": "your-user-id"}\nfiles = {\n    "audio": open("speech.wav", "rb"),\n    "video": open("video.mp4", "rb")\n}\n\nresponse = requests.post(url, headers=headers, files=files)\nresult = response.json()\nprint(f"Synchronized Video URL: {result[\'url\']}")\n'})})}),(0,r.jsx)(t.A,{value:"javascript",label:"JavaScript",children:(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-javascript",children:"const formData = new FormData();\nformData.append('audio', audioFile);\nformData.append('video', videoFile);\n\nconst response = await fetch('https://api.tryvinci.com/vincils', {\n  method: 'POST',\n  headers: {\n    'X-User-ID': 'your-user-id',\n  },\n  body: formData,\n});\n\nconst result = await response.json();\nconsole.log(`Synchronized Video URL: ${result.url}`);\n"})})})]}),"\n",(0,r.jsx)(i.h2,{id:"input-requirements",children:"Input Requirements"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Video Requirements"}),(0,r.jsx)("div",{children:(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Format: MP4, MOV"}),"\n",(0,r.jsx)(i.li,{children:"Resolution: 720p or higher recommended"}),"\n",(0,r.jsx)(i.li,{children:"Clear, front-facing view of the speaker"}),"\n"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Audio Requirements"}),(0,r.jsx)("div",{children:(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Format: WAV, MP3, M4A"}),"\n",(0,r.jsx)(i.li,{children:"Clear speech with minimal background noise"}),"\n",(0,r.jsx)(i.li,{children:"Matching duration with video"}),"\n"]})})]}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Duration Limits"}),(0,r.jsx)("div",{children:(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Optimal length: 5-60 seconds per request"}),"\n",(0,r.jsx)(i.li,{children:"Longer videos should be split into segments"}),"\n"]})})]}),"\n",(0,r.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)("div",{className:"row",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsxs)("div",{className:"card",children:[(0,r.jsx)("div",{className:"card__header",children:(0,r.jsx)("h3",{children:"Video Quality"})}),(0,r.jsx)("div",{className:"card__body",children:(0,r.jsx)(i.p,{children:"Use high-quality, well-lit video footage."})})]})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsxs)("div",{className:"card",children:[(0,r.jsx)("div",{className:"card__header",children:(0,r.jsx)("h3",{children:"Audio Clarity"})}),(0,r.jsx)("div",{className:"card__body",children:(0,r.jsx)(i.p,{children:"Ensure clear speech audio for best sync."})})]})})]}),"\n",(0,r.jsx)(i.admonition,{title:"Performance",type:"tip",children:(0,r.jsx)(i.p,{children:"For best results, ensure the speaker's face is clearly visible and well-lit throughout the video."})})]})}function u(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);